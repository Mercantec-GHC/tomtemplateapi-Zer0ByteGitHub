@page "/Begge"
@using System.Text.Json
@using System.Text.Json.Serialization
@using ApexCharts
@rendermode InteractiveServer
@inject HttpClient Client // Injicerer HttpClient for at kunne lave HTTP-anmodninger

<h1>Prissammenligning: Benzin og Diesel</h1>

@if (benzinBranches != null && dieselBranches != null)
{
    <ApexChart TItem="FuelPrice" Title="Benzin vs Diesel Prices"
               XAxisType="XAxisType.Datetime"
               Options="options">

        <ApexPointSeries TItem="FuelPrice"
                         Items="benzinBranches"
                         Name="Benzin"
                         SeriesType="SeriesType.Line"
                         XValue="@(e => e.Date)"
                         YValue="@(e => e.Price)"
                         Color="#0000ff" /> <!-- Blue color -->

        <ApexPointSeries TItem="FuelPrice"
                         Items="dieselBranches"
                         Name="Diesel"
                         SeriesType="SeriesType.Line"
                         XValue="@(e => e.Date)"
                         YValue="@(e => e.Price)"
                         Color="#ff0000" /> <!-- Red color -->

    </ApexChart>
}

@code {
    private ApexChartOptions<FuelPrice> options = new ApexCharts.ApexChartOptions<FuelPrice>();
    private List<FuelPrice>? benzinBranches;
    private List<FuelPrice>? dieselBranches;

    protected override async Task OnInitializedAsync()
    {
        // Konfiguration af grafen
        options.Debug = true;
        options.Tooltip = new ApexCharts.Tooltip
            {
                X = new TooltipX { Format = "MMMM yyyy" },
                Y = new TooltipY
                {
                    Title = new TooltipYTitle { Formatter = "function(name) { return name + ':' }" },
                    Formatter = "function(value, { series, seriesIndex, dataPointIndex, w }) { return '$' + value }"
                }
            };
        options.Subtitle = new Subtitle { OffsetY = 15, Text = "Sammenligning af benzin og dieselpriser" };
        options.Xaxis = new XAxis
            {
                Title = new AxisTitle
                {
                    OffsetY = 5,
                    Text = "Month",
                    Style = new AxisTitleStyle { FontSize = "14px", Color = "lightgrey" }
                },
                AxisBorder = new AxisBorder
                {
                    Height = 2
                }
            };
        options.Yaxis = new List<YAxis>
    {
        new YAxis
        {
            DecimalsInFloat = 0,
            Labels = new YAxisLabels { Rotate = -45, Style = new AxisLabelStyle { FontSize = "10px" } },
            Title = new AxisTitle { Text = "Price", Style = new AxisTitleStyle { FontSize = "14px", Color = "lightgrey" } }
        }
    };

        // Hent data fra API'er
        benzinBranches = await Client.GetFromJsonAsync<List<FuelPrice>>("https://magsapi.onrender.com/api/miles95");
        dieselBranches = await Client.GetFromJsonAsync<List<FuelPrice>>("https://magsapi.onrender.com/api/diesel");

        // Opdater UI
        StateHasChanged();
    }

    public class FuelPrice
    {
        public DateTime Date { get; set; }
        public decimal Price { get; set; }
    }
}
